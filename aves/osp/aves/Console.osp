namespace aves;

public static class Console
{
	__init_type("aves_Console_init");

	// Output

	public static write(value)
		__extern("aves_Console_write");
	public static writeLine(value)
		__extern("aves_print"); // An alias! How naughty. They do the same thing anyway.
	public static writeErr(value)
		__extern("aves_Console_writeErr");
	public static writeLineErr(value)
		__extern("aves_Console_writeLineErr");

	public static write(format, values)
	{
		if format is not String:
			throwFormatTypeError();
		write(format.format(values));
	}
	public static writeLine()
	{
		write(Env.newline);
	}
	public static writeLine(format, values)
	{
		if format is not String:
			throwFormatTypeError();
		writeLine(format.format(values));
	}
	public static writeErr(format, values)
	{
		if format is not String:
			throwFormatTypeError();
		writeErr(format.format(values));
	}
	public static writeLineErr()
	{
		writeErr(Env.newline);
	}
	public static writeLineErr(format, values)
	{
		if format is not String:
			throwFormatTypeError();
		writeLineErr(format.format(values));
	}

	public static clear()
		__extern("aves_Console_clear");

	// Input

	public static readKey()
		__extern("aves_Console_readKey");
	public static readKey(hideChar)
		__extern("aves_Console_readKey");
	public static readChar()
		__extern("aves_Console_readChar");
	public static readLine()
		__extern("aves_Console_readLine", locals=1);

	// Color

	public static get textColor
		__extern("aves_Console_get_textColor");
	public static set textColor
		__extern("aves_Console_set_textColor");

	public static get backColor
		__extern("aves_Console_get_backColor");
	public static set backColor
		__extern("aves_Console_set_backColor");

	public static setColors(text, background)
		__extern("aves_Console_setColors");
	public static resetColors()
		__extern("aves_Console_resetColors");

	// Cursor

	public static get showCursor
		__extern("aves_Console_get_showCursor");
	public static set showCursor
		__extern("aves_Console_set_showCursor");

	public static get cursorX
		__extern("aves_Console_get_cursorX");
	public static set cursorX
		__extern("aves_Console_set_cursorX");

	public static get cursorY
		__extern("aves_Console_get_cursorY");
	public static set cursorY
		__extern("aves_Console_set_cursorY");

	public static setCursorPosition(x, y)
		__extern("aves_Console_setCursorPosition");

	// Buffer size

	public static get bufferWidth
		__extern("aves_Console_get_bufferWidth");
	public static set bufferWidth { setBufferSize(value, bufferHeight); }

	public static get bufferHeight
		__extern("aves_Console_get_bufferHeight");
	public static set bufferHeight { setBufferSize(bufferWidth, value); }

	public static setBufferSize(width, height)
		__extern("aves_Console_setBufferSize");

	// Windows size & position

	public static get windowWidth
		__extern("aves_Console_get_windowWidth");
	public static set windowWidth { setWindowSize(value, windowHeight); }

	public static get windowHeight
		__extern("aves_Console_get_windowHeight");
	public static set windowHeight { setWindowSize(windowWidth, value); }

	public static setWindowSize(width, height)
		__extern("aves_Console_setWindowSize");

	private static throwFormatTypeError()
	{
		throw new TypeError("The format string must be a string.");
	}
}
