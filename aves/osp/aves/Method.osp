namespace aves;

public class Method
{
	__init_type("aves_Method_init");

	private new(value)			__extern("aves_Method_new");

	public get hasInstance		__extern("aves_Method_get_hasInstance");

	public this(args...)
	{
		throw new Error("aves.Method's invocator is not supposed to be called directly.");
	}

	public accepts(argCount)	__extern("aves_Method_accepts");

	public static fromValue(value)
	{
		if value is not Method:
			value = new Method(value);

		return value;
	}

	operator ==(a, b)			__extern("aves_Method_opEquals");
}