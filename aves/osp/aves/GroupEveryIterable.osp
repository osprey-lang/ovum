namespace aves;

/// Summary: Implements {Iterable.groupEvery}.
internal class GroupEveryIterable is Iterable
{
	public new(this.inner, this.frequency);

	private inner;
	private frequency;

	iter
	{
		return new GroupEveryIterator(inner.iter, frequency);
	}
}

internal class GroupEveryIterator is Iterator
{
	public new(this.inner, this.frequency);

	private inner;
	private frequency;
	private cur;
	private hasMore = true;

	override get current = cur;

	override moveNext()
	{
		if hasMore
		{
			var items = [];

			while hasMore = inner.moveNext()
			{
				items.add(inner.current);

				if items.length == frequency:
					break;
			}

			// Only return the list if we actually collected something
			if items.length > 0
			{
				cur = items;
				return true;
			}
		}

		return false;
	}
}
