namespace aves;

public function bool(value)
{
	return not not value;
}

public class Boolean __primitive
{
	private new();

	override getHashCode()
	{
		return this ? 1 : 0;
	}
	override toString()
	{
		return this ? trueString : falseString;
	}

	public static parse(str)
	{
		str = string(str).trim();
		if str.equalsIgnoreCase(trueString):
			return true;
		if str.equalsIgnoreCase(falseString):
			return false;
		return null;
	}

	private const trueString = "true";
	private const falseString = "false";

	public const min = false;
	public const max = true;

	operator ==(a, b)		__extern("aves_Boolean_opEquals");
	operator <=>(a, b)		__extern("aves_Boolean_opCompare");
	operator +(a)
	{
		return a ? 1 : 0;
	}
}