namespace aves;

public class Type
{
	__init_type("aves_Type_init");

	private new();

	public get name
	{
		var fullName = this.fullName;

		var i = fullName.length - 1;
		while i >= 0 and fullName[i] != '.':
			i -= 1;

		if i == -1:
			return fullName;
		return fullName.substr(i + 1);
	}

	public get fullName						__extern("aves_Type_get_fullName");

	public get baseType						__extern("aves_Type_get_baseType");

	public inheritsFrom(type)
	{
		if type is not Type:
			throw new TypeError("type must be an instance of aves.Type.");
		return inheritsFromInternal(type);
	}
	private inheritsFromInternal(type)		__extern("aves_Type_inheritsFromInternal");

	override toString()
	{
		return "<Type {0}>".format([fullName]);
	}
}