use namespace aves;

namespace io;

// Keep all of these enum values synchronised with those in io_file.h

public enum set FileMode
{
	/// Summary: Opens an existing file. If the file does not exist,
	///          an {io.FileNotFoundError} is thrown.
	open = 1,
	/// Summary: Opens the file if it exists, or creates the file if
	///          it does not.
	openOrCreate = 2,
	/// Summary: Creates a new file. If the file already exists, it
	///          is overwritten.
	create = 3,
	/// Summary: Creates a new file. If the file already exists, an
	///          {io.IOError} is thrown.
	createNew = 4,
	/// Summary: Opens an existing file, and truncates it to zero bytes.
	///          Files opened for truncation cannot be read from, hence
	///          this mode must be combined with {FileAccess.write}.
	truncate = 5,
	/// Summary: Opens an existing file, and places the file pointer at
	///          the end, or creates a new file. Writing to the file
	///          appends to the end of it.
	///
	///          Files opened for appending cannot be read from, hence
	///          this mode must be combined with {FileAccess.write}.
	append = 6,
}

public enum set FileAccess
{
	/// Summary: Opens the file for reading. This flag cannot be used
	///          together with {FileMode.truncate} or {FileMode.append}.
	read = 1,
	/// Summary: Opens the file for writing.
	write = 2,
	/// Summary: Combines the {read} and {write} flags, thus opening
	///          the file for both reading and writing.
	readWrite = read | write,
}

public enum set FileShare
{
	/// Summary: Specifies that no other handles to the file may read
	///          from, write to or delete the file.
	none = 0,
	/// Summary: Subsequently opened handles to the file may read from it.
	read = 1,
	/// Summary: Subsequently opened handles to the file may write to it.
	write = 2,
	/// Summary: Subsequently opened handles to the file may both read from and
	///          write to it.
	readWrite = read | write,
	/// Summary: The file may subsequently be deleted.
	delete = 4,
}