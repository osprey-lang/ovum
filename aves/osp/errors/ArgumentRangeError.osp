namespace aves;

/// Summary: Represents an error that occurs when an argument value is out of range.
public inheritable ArgumentRangeError is ArgumentError
{
	/// Summary: Creates a new {ArgumentRangeError} with the default message
	///          and no parameter name.
	public new()
	{
		new base(defaultMessage, null);
	}
	/// Summary: Creates a new {ArgumentRangeError} with the default message
	///          and the name of the parameter that caused the error.
	/// Param paramName: A String containing the name of the parameter that
	///                  caused the error, or null.
	public new(paramName)
	{
		new base(defaultMessage, paramName);
	}
	/// Summary: Creates a new {ArgumentRangeError} with the specified message
	///          and the name of the parameter that caused the error.
	/// Param paramName: A String containing the name of the parameter that
	///                  caused the error, or null.
	/// Param message: An error message describing the error.
	/// Remarks: If {message} is not a String, it is converted to one;
	///          if it is null, the default message is used.
	public new(paramName, message)
	{
		new base(message ?? defaultMessage, paramName);
	}
	/// Summary: Creates a new {ArgumentRangeError} with the specified message,
	///          the name of the parameter that caused the error, and a specified
	///          inner error.
	/// Param paramName: A String containing the name of the parameter that
	///                  caused the error, or null.
	/// Param message: An error message describing the error.
	/// Param innerError: The error that caused this error.
	/// Remarks: If {message} is not a String, it is converted to one;
	///          if it is null, the default message is used.
	public new(paramName, message, innerError)
	{
		new base(message ?? defaultMessage, paramName, innerError);
	}

	private const defaultMessage = "Argument value out of range.";
}