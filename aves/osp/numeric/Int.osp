namespace aves;

public function int(value)		__extern("aves_int");
	
public class Int __primitive
{
	private new();

	override getHashCode()		__extern("aves_Int_getHashCode");
	override toString()			__extern("aves_Int_toString");
	public toString(format)		__extern("aves_Int_toStringf");

	public const min = __named_const(int: min);
	public const max = __named_const(int: max);

	operator ==(a, b)			__extern("aves_Int_opEquals");
	operator <=>(a, b)			__extern("aves_Int_opCompare");
	operator <<(a, b)			__extern("aves_Int_opShiftLeft");
	operator >>(a, b)			__extern("aves_Int_opShiftRight");
	operator +(a, b)			__extern("aves_Int_opAdd");
	operator -(a, b)			__extern("aves_Int_opSubtract");
	operator |(a, b)			__extern("aves_Int_opOr");
	operator ^(a, b)			__extern("aves_Int_opXor");
	operator *(a, b)			__extern("aves_Int_opMultiply");
	operator /(a, b)			__extern("aves_Int_opDivide");
	operator %(a, b)			__extern("aves_Int_opModulo");
	operator &(a, b)			__extern("aves_Int_opAnd");
	operator **(a, b)			__extern("aves_Int_opPower");
	operator +(a)				__extern("aves_Int_opPlus");
	operator -(a)				__extern("aves_Int_opNegate");
	operator ~(a)				__extern("aves_Int_opNot");
}