use aves;
use aves.reflection; // for Module
use testing.unit;

namespace aves.tests;

internal function main(args)
{
	var module = Module.getCurrentModule();
	if args.isEmpty
	{
		// Run all tests
		TestFixture.runAll(module);
	}
	else
	{
		const classPrefix = "aves.tests.";

		var testFixtureType = typeof(TestFixture);

		var testTypes = new List(args.length);
		// args contains a list of test fixture class names,
		// without the "aves.tests." prefix.
		for arg in args
		{
			var className = classPrefix :: arg;
			var type = module.getType(className);
			if type is null
			{
				Console.writeLineErr("Test class not found: " :: className);
				next;
			}
			if not type.inheritsFrom(testFixtureType)
			{
				Console.writeLineErr("Class is not a testing.unit.TestFixture: " :: className);
				next;
			}

			testTypes.add(type);
		}

		var runner = new TestRunner();
		var printer = new TestResultPrinter();
		var results = runner.runAll(testTypes);
		printer.printResults(results);
	}
}
